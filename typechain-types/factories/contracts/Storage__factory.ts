/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Storage, StorageInterface } from "../../contracts/Storage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "numberOfGivenLock",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "_symbol",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "ClaimedTokens",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "_symbol",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "_startTime",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "_endTime",
        type: "uint32",
      },
    ],
    name: "LockCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "_symbol",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "TokensDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "_symbol",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "TokensTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "_symbol",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "TokensWithdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "_addressStorage",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "_boolStorage",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "_bytesStorage",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_initialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "_stringStorage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "_uintStorage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "addressToBankAccount",
    outputs: [
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "availableBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockedBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "transactionsCount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "addressToLocks",
    outputs: [
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockedValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unlockedValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimed",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "globalTokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "whitelistedTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b03806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806385b182b41161007157806385b182b41461019157806385f264ea146101c55780638af65240146101f55780638da5cb5b14610225578063aa3d9a1514610243578063d9f8b3e814610273576100a9565b80632a45f2e8146100ae5780633072cf60146100de57806366261ee6146100fc57806379a5ba7c146101315780637ab003a014610161575b600080fd5b6100c860048036038101906100c391906106ae565b6102a3565b6040516100d5919061077f565b60405180910390f35b6100e6610359565b6040516100f391906107bc565b60405180910390f35b61011660048036038101906101119190610835565b61036c565b6040516101289695949392919061087b565b60405180910390f35b61014b600480360381019061014691906106ae565b6103b5565b60405161015891906107bc565b60405180910390f35b61017b600480360381019061017691906106ae565b6103eb565b60405161018891906108dc565b60405180910390f35b6101ab60048036038101906101a69190610923565b610419565b6040516101bc959493929190610963565b60405180910390f35b6101df60048036038101906101da91906106ae565b61046c565b6040516101ec91906109c5565b60405180910390f35b61020f600480360381019061020a91906106ae565b6104b5565b60405161021c91906109f9565b60405180910390f35b61022d6104e3565b60405161023a91906109c5565b60405180910390f35b61025d60048036038101906102589190610a40565b610509565b60405161026a91906109c5565b60405180910390f35b61028d60048036038101906102889190610a40565b61053c565b60405161029a91906108dc565b60405180910390f35b60038180516020810182018051848252602083016020850120818352809550505050505060009150905080546102d890610a9c565b80601f016020809104026020016040519081016040528092919081815260200182805461030490610a9c565b80156103515780601f1061032657610100808354040283529160200191610351565b820191906000526020600020905b81548152906001019060200180831161033457829003601f168201915b505050505081565b600560149054906101000a900460ff1681565b60096020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050160009054906101000a900460ff16905086565b6002818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900460ff1681565b6000818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b600a602052816000526040600020818154811061043557600080fd5b9060005260206000209060050201600091509150508060000154908060010154908060020154908060030154908060040154905085565b6001818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6004818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60076020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60066020528060005260406000206000915090505481565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105bb82610572565b810181811067ffffffffffffffff821117156105da576105d9610583565b5b80604052505050565b60006105ed610554565b90506105f982826105b2565b919050565b600067ffffffffffffffff82111561061957610618610583565b5b61062282610572565b9050602081019050919050565b82818337600083830152505050565b600061065161064c846105fe565b6105e3565b90508281526020810184848401111561066d5761066c61056d565b5b61067884828561062f565b509392505050565b600082601f83011261069557610694610568565b5b81356106a584826020860161063e565b91505092915050565b6000602082840312156106c4576106c361055e565b5b600082013567ffffffffffffffff8111156106e2576106e1610563565b5b6106ee84828501610680565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610731578082015181840152602081019050610716565b83811115610740576000848401525b50505050565b6000610751826106f7565b61075b8185610702565b935061076b818560208601610713565b61077481610572565b840191505092915050565b600060208201905081810360008301526107998184610746565b905092915050565b60008115159050919050565b6107b6816107a1565b82525050565b60006020820190506107d160008301846107ad565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610802826107d7565b9050919050565b610812816107f7565b811461081d57600080fd5b50565b60008135905061082f81610809565b92915050565b60006020828403121561084b5761084a61055e565b5b600061085984828501610820565b91505092915050565b6000819050919050565b61087581610862565b82525050565b600060c082019050610890600083018961086c565b61089d602083018861086c565b6108aa604083018761086c565b6108b7606083018661086c565b6108c4608083018561086c565b6108d160a08301846107ad565b979650505050505050565b60006020820190506108f1600083018461086c565b92915050565b61090081610862565b811461090b57600080fd5b50565b60008135905061091d816108f7565b92915050565b6000806040838503121561093a5761093961055e565b5b600061094885828601610820565b92505060206109598582860161090e565b9150509250929050565b600060a082019050610978600083018861086c565b610985602083018761086c565b610992604083018661086c565b61099f606083018561086c565b6109ac608083018461086c565b9695505050505050565b6109bf816107f7565b82525050565b60006020820190506109da60008301846109b6565b92915050565b6000819050919050565b6109f3816109e0565b82525050565b6000602082019050610a0e60008301846109ea565b92915050565b610a1d816109e0565b8114610a2857600080fd5b50565b600081359050610a3a81610a14565b92915050565b600060208284031215610a5657610a5561055e565b5b6000610a6484828501610a2b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610ab457607f821691505b602082108103610ac757610ac6610a6d565b5b5091905056fea26469706673582212203c24aa34788e58b53ba5e9231683b1601db14e7335b853d3c32f00fef4a6c02c64736f6c634300080d0033";

type StorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Storage__factory extends ContractFactory {
  constructor(...args: StorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Storage> {
    return super.deploy(overrides || {}) as Promise<Storage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Storage {
    return super.attach(address) as Storage;
  }
  override connect(signer: Signer): Storage__factory {
    return super.connect(signer) as Storage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StorageInterface {
    return new utils.Interface(_abi) as StorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Storage {
    return new Contract(address, _abi, signerOrProvider) as Storage;
  }
}
