/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Proxy, ProxyInterface } from "../../contracts/Proxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_currentAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "numberOfGivenLock",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "_symbol",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "ClaimedTokens",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "_symbol",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "_startTime",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "_endTime",
        type: "uint32",
      },
    ],
    name: "LockCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "_symbol",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "TokensDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "_symbol",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "TokensTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "_symbol",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "TokensWithdraw",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "_addressStorage",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "_boolStorage",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "_bytesStorage",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_initialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "_stringStorage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "_uintStorage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "addressToBankAccount",
    outputs: [
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "availableBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockedBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "transactionsCount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "addressToLocks",
    outputs: [
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockedValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unlockedValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimed",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "globalTokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newAddress",
        type: "address",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "whitelistedTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610e8c380380610e8c833981810160405281019061003291906100dc565b80600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610109565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a98261007e565b9050919050565b6100b98161009e565b81146100c457600080fd5b50565b6000815190506100d6816100b0565b92915050565b6000602082840312156100f2576100f1610079565b5b6000610100848285016100c7565b91505092915050565b610d74806101186000396000f3fe6080604052600436106100ab5760003560e01c806385b182b41161006457806385b182b41461030457806385f264ea146103455780638af65240146103825780638da5cb5b146103bf578063aa3d9a15146103ea578063d9f8b3e814610427576100b2565b80630900f010146101b75780632a45f2e8146101e05780633072cf601461021d57806366261ee61461024857806379a5ba7c1461028a5780637ab003a0146102c7576100b2565b366100b257005b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013f906107b6565b60405180910390fd5b600080368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509050600080825160208401855af43d604051816000823e82600081146101b3578282f35b8282fd5b3480156101c357600080fd5b506101de60048036038101906101d99190610848565b610464565b005b3480156101ec57600080fd5b50610207600480360381019061020291906109bb565b6104a8565b6040516102149190610a7b565b60405180910390f35b34801561022957600080fd5b5061023261055e565b60405161023f9190610ab8565b60405180910390f35b34801561025457600080fd5b5061026f600480360381019061026a9190610848565b610571565b60405161028196959493929190610aec565b60405180910390f35b34801561029657600080fd5b506102b160048036038101906102ac91906109bb565b6105ba565b6040516102be9190610ab8565b60405180910390f35b3480156102d357600080fd5b506102ee60048036038101906102e991906109bb565b6105f0565b6040516102fb9190610b4d565b60405180910390f35b34801561031057600080fd5b5061032b60048036038101906103269190610b94565b61061e565b60405161033c959493929190610bd4565b60405180910390f35b34801561035157600080fd5b5061036c600480360381019061036791906109bb565b610671565b6040516103799190610c36565b60405180910390f35b34801561038e57600080fd5b506103a960048036038101906103a491906109bb565b6106ba565b6040516103b69190610c6a565b60405180910390f35b3480156103cb57600080fd5b506103d46106e8565b6040516103e19190610c36565b60405180910390f35b3480156103f657600080fd5b50610411600480360381019061040c9190610cb1565b61070e565b60405161041e9190610c36565b60405180910390f35b34801561043357600080fd5b5061044e60048036038101906104499190610cb1565b610741565b60405161045b9190610b4d565b60405180910390f35b80600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60038180516020810182018051848252602083016020850120818352809550505050505060009150905080546104dd90610d0d565b80601f016020809104026020016040519081016040528092919081815260200182805461050990610d0d565b80156105565780601f1061052b57610100808354040283529160200191610556565b820191906000526020600020905b81548152906001019060200180831161053957829003601f168201915b505050505081565b600560149054906101000a900460ff1681565b60096020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050160009054906101000a900460ff16905086565b6002818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900460ff1681565b6000818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b600a602052816000526040600020818154811061063a57600080fd5b9060005260206000209060050201600091509150508060000154908060010154908060020154908060030154908060040154905085565b6001818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6004818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60076020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60066020528060005260406000206000915090505481565b600082825260208201905092915050565b7f46756e6374696f6e616c206164647265737320696e76616c6964000000000000600082015250565b60006107a0601a83610759565b91506107ab8261076a565b602082019050919050565b600060208201905081810360008301526107cf81610793565b9050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610815826107ea565b9050919050565b6108258161080a565b811461083057600080fd5b50565b6000813590506108428161081c565b92915050565b60006020828403121561085e5761085d6107e0565b5b600061086c84828501610833565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6108c88261087f565b810181811067ffffffffffffffff821117156108e7576108e6610890565b5b80604052505050565b60006108fa6107d6565b905061090682826108bf565b919050565b600067ffffffffffffffff82111561092657610925610890565b5b61092f8261087f565b9050602081019050919050565b82818337600083830152505050565b600061095e6109598461090b565b6108f0565b90508281526020810184848401111561097a5761097961087a565b5b61098584828561093c565b509392505050565b600082601f8301126109a2576109a1610875565b5b81356109b284826020860161094b565b91505092915050565b6000602082840312156109d1576109d06107e0565b5b600082013567ffffffffffffffff8111156109ef576109ee6107e5565b5b6109fb8482850161098d565b91505092915050565b600081519050919050565b60005b83811015610a2d578082015181840152602081019050610a12565b83811115610a3c576000848401525b50505050565b6000610a4d82610a04565b610a578185610759565b9350610a67818560208601610a0f565b610a708161087f565b840191505092915050565b60006020820190508181036000830152610a958184610a42565b905092915050565b60008115159050919050565b610ab281610a9d565b82525050565b6000602082019050610acd6000830184610aa9565b92915050565b6000819050919050565b610ae681610ad3565b82525050565b600060c082019050610b016000830189610add565b610b0e6020830188610add565b610b1b6040830187610add565b610b286060830186610add565b610b356080830185610add565b610b4260a0830184610aa9565b979650505050505050565b6000602082019050610b626000830184610add565b92915050565b610b7181610ad3565b8114610b7c57600080fd5b50565b600081359050610b8e81610b68565b92915050565b60008060408385031215610bab57610baa6107e0565b5b6000610bb985828601610833565b9250506020610bca85828601610b7f565b9150509250929050565b600060a082019050610be96000830188610add565b610bf66020830187610add565b610c036040830186610add565b610c106060830185610add565b610c1d6080830184610add565b9695505050505050565b610c308161080a565b82525050565b6000602082019050610c4b6000830184610c27565b92915050565b6000819050919050565b610c6481610c51565b82525050565b6000602082019050610c7f6000830184610c5b565b92915050565b610c8e81610c51565b8114610c9957600080fd5b50565b600081359050610cab81610c85565b92915050565b600060208284031215610cc757610cc66107e0565b5b6000610cd584828501610c9c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610d2557607f821691505b602082108103610d3857610d37610cde565b5b5091905056fea264697066735822122062fd5594e23636d7db71e07b839040b8d7ae9caff5aba21d856c805cdeb18ab164736f6c634300080d0033";

type ProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Proxy__factory extends ContractFactory {
  constructor(...args: ProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _currentAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Proxy> {
    return super.deploy(_currentAddress, overrides || {}) as Promise<Proxy>;
  }
  override getDeployTransaction(
    _currentAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_currentAddress, overrides || {});
  }
  override attach(address: string): Proxy {
    return super.attach(address) as Proxy;
  }
  override connect(signer: Signer): Proxy__factory {
    return super.connect(signer) as Proxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxyInterface {
    return new utils.Interface(_abi) as ProxyInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Proxy {
    return new Contract(address, _abi, signerOrProvider) as Proxy;
  }
}
